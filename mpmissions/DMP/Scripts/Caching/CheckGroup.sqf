private["_group","_leader","_units","_vehicles","_checkDistance","_cycle","_group","_cache","_reason","_count"];
_group=_this select 0;
_leader=leader _group;
if!((side _leader)in dmpCacheSides)exitWith{};
_units=[];
_vehicles=[];
_checkDistance=dmpCacheDistance;
_cycle=dmpCacheCycle;
_group setVariable["dmpCached",FALSE,TRUE];
_cache=TRUE;
_simulation=dmpCacheSimulation;
_reason="";
_count={alive _x}count(units _group);
while{TRUE}do{
	if(dmpDebugCache)then{systemChat format["Cache check: %1",_group]};
	if!(_group call dmp_fnc_GroupIsAlive)exitWith{};
	if(_group getVariable"dmpCacheExclude")exitWith{};
	if(isNull _group)exitWith{};
	_units=units _group;
	{if!(alive _x)then{_units=_units-[_x]}}forEach _units;
	if((count _units)<1)exitWith{};
	_cache=TRUE;
	if(TRUE)then{
		if!(alive _leader)exitWith{_cache=FALSE;_reason="LEADER DEAD"};
		if!(_count==({alive _x}count(units _group)))exitWith{_cache=FALSE;_reason="CASUALTIES";_count={alive _x}count(units _group)};
		{if(isPlayer _x)exitWith{_cache=FALSE;_reason="PLAYER IN GROUP"}}forEach _units;
		//if((behaviour _leader)in["AWARE","COMBAT"])exitWith{_cache=FALSE};
		if((behaviour _leader)in["COMBAT"])exitWith{_cache=FALSE;_reason="COMBAT MODE"};
		{if((vehicle _x)isKindOf"AIR")exitWith{_cache=FALSE;_reason="AIR"}}forEach _units;
		if!(_leader==leader _group)exitWith{_cache=FALSE;_leader=leader _group;_reason="LEADER CHANGE"};
		_checkDistance=dmpCacheDistance;
		if!(_leader==(vehicle _leader))then{_checkDistance=dmpCacheDistanceV};
		{if((_x distance2D _leader)<_checkDistance)exitWith{_cache=FALSE;_reason="NEAR PLAYER"}}forEach(call DMP_fnc_ListPlayers);
		//_enemy=[getPos _leader,side _leader,_checkDistance]call dmp_fnc_GetGroupsEnemy;
		_enemy=_leader targets[TRUE,_checkDistance];
		if((count _enemy)>0)then{_cache=FALSE;_reason="ENEMY IN RANGE"};
	};
	//if(dmpDebugCache)then{systemChat format["Cache: %1?  %2",_group,_cache]};
	if(_cache)then{
		_units=(units _group)-[_leader,vehicle _leader];
		_units=_units-(crew(vehicle _leader));
		_vehicles=[];
		{_vehicles pushBackUnique(vehicle _x)}forEach _units;
		if(_simulation)then{{_x setVehiclePosition[(getPos _leader),[],70,"NONE"]}forEach _vehicles};
		if(_group getVariable"dmpCached")exitWith{};
		_group call DMP_fnc_CacheGroup;
		if(dmpDebugCache)then{systemChat format["%1  cached",_group]};
	}else{
		if!(_group getVariable"dmpCached")exitWith{};
		_group call DMP_fnc_UncacheGroup;
		if(dmpDebugCache)then{systemChat format["%1  uncached (%2)",_group,_reason]};
		sleep 20;
	};
	sleep _cycle;
};